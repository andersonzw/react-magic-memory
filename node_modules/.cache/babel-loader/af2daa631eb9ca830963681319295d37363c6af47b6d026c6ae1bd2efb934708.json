{"ast":null,"code":"import _objectSpread from\"/home/vboxuser/repos/magic-memory/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/vboxuser/repos/magic-memory/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import\"./App.css\";import SingleCard from\"./components/SingleCard\";// const cardImages = [\n//   { src: \"/img/91764895_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/91764895_p1_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/94101307_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/94425331_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/101224291_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/112297418_p0_master1200.jpg\", matched: false, revealed: false },\n// ];\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cardImages=[{src:\"/img/helmet-1.png\",matched:false,revealed:false},{src:\"/img/potion-1.png\",matched:false,revealed:false},{src:\"/img/ring-1.png\",matched:false,revealed:false},{src:\"/img/scroll-1.png\",matched:false,revealed:false},{src:\"/img/shield-1.png\",matched:false,revealed:false},{src:\"/img/sword-1.png\",matched:false,revealed:false}];function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),turns=_useState4[0],setTurns=_useState4[1];// need states to store user choices\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),choiceOne=_useState6[0],setChoiceOne=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),choiceTwo=_useState8[0],setChoiceTwo=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),disabled=_useState10[0],setDisabled=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),toggle=_useState12[0],setToggle=_useState12[1];// called in a new game\n// shuffle cards\nvar shuffleCards=function shuffleCards(){var shuffledDeck=[].concat(cardImages,cardImages)// suffle cards\n.sort(function(){return Math.random()-0.5;})// creates a new object where each card also has an id\n.map(function(card){return _objectSpread(_objectSpread({},card),{},{id:Math.random()});});// update the state\nsetCards(shuffledDeck);setTurns(0);setChoiceTwo(null);setChoiceOne(null);setToggle(false);};// handle choice\nvar handleChoice=function handleChoice(card){if(choiceOne===null){setChoiceOne(card);}else{setChoiceTwo(card);}};// compare cards, useEffect fires everytime choiceTwo is updated\nuseEffect(function(){if(choiceTwo&&choiceOne.id!=choiceTwo.id){// disables card while doing comparison\nsetDisabled(true);// if match, change flag to matched\nif(choiceOne.src===choiceTwo.src){setCards(function(prevCards){return prevCards.map(function(card){if(card.src===choiceOne.src){return _objectSpread(_objectSpread({},card),{},{matched:true});}else{return _objectSpread({},card);}});});}// delay the reset\nsetTimeout(function(){return resetTurn();},1000);}},[choiceTwo]);console.log(cards);// reset choices\nvar resetTurn=function resetTurn(){setChoiceTwo(null);setChoiceOne(null);setTurns(function(prevTurns){return prevTurns+1;});setDisabled(false);};// automatically start a new game\nuseEffect(function(){shuffleCards();},[]);// reveal all cards or hide all cards\nuseEffect(function(){if(toggle){setCards(function(prevCards){return prevCards.map(function(card){return _objectSpread(_objectSpread({},card),{},{revealed:true});});});}else{setCards(function(prevCards){return prevCards.map(function(card){return _objectSpread(_objectSpread({},card),{},{revealed:false});});});}},[toggle]);var handleToggle=function handleToggle(){setToggle(!toggle);setChoiceTwo(null);setChoiceOne(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Magic Match\"}),/*#__PURE__*/_jsx(\"button\",{onClick:shuffleCards,children:\"New Game\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Turns: \",turns]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleToggle,children:\"Reveal/Hide\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card-grid\",children:cards.map(function(card){return/*#__PURE__*/ (// pass down a prop\n_jsx(SingleCard,{card:card,handleChoice:handleChoice,flipped:card===choiceOne||card===choiceTwo||card.matched||card.revealed// this card will be rendered as flipped if it is currently been selected\n,disabled:disabled},card.id));})})]});}export default App;","map":{"version":3,"names":["useEffect","useState","SingleCard","jsx","_jsx","jsxs","_jsxs","cardImages","src","matched","revealed","App","_useState","_useState2","_slicedToArray","cards","setCards","_useState3","_useState4","turns","setTurns","_useState5","_useState6","choiceOne","setChoiceOne","_useState7","_useState8","choiceTwo","setChoiceTwo","_useState9","_useState10","disabled","setDisabled","_useState11","_useState12","toggle","setToggle","shuffleCards","shuffledDeck","concat","sort","Math","random","map","card","_objectSpread","id","handleChoice","prevCards","setTimeout","resetTurn","console","log","prevTurns","handleToggle","className","children","onClick","flipped"],"sources":["/home/vboxuser/repos/magic-memory/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SingleCard from \"./components/SingleCard\";\n\n// const cardImages = [\n//   { src: \"/img/91764895_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/91764895_p1_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/94101307_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/94425331_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/101224291_p0_master1200.jpg\", matched: false, revealed: false },\n//   { src: \"/img/112297418_p0_master1200.jpg\", matched: false, revealed: false },\n// ];\nconst cardImages = [\n  { src: \"/img/helmet-1.png\", matched: false, revealed: false },\n  { src: \"/img/potion-1.png\", matched: false, revealed: false },\n  { src: \"/img/ring-1.png\", matched: false, revealed: false },\n  { src: \"/img/scroll-1.png\", matched: false, revealed: false },\n  { src: \"/img/shield-1.png\", matched: false, revealed: false },\n  { src: \"/img/sword-1.png\", matched: false, revealed: false },\n];\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n\n  // need states to store user choices\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const [disabled, setDisabled] = useState(false);\n\n  const [toggle, setToggle] = useState(false);\n\n  // called in a new game\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffledDeck = [...cardImages, ...cardImages]\n      // suffle cards\n      .sort(() => Math.random() - 0.5)\n      // creates a new object where each card also has an id\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    // update the state\n    setCards(shuffledDeck);\n    setTurns(0);\n    setChoiceTwo(null);\n    setChoiceOne(null);\n    setToggle(false)\n  };\n\n  // handle choice\n  const handleChoice = (card) => {\n    if (choiceOne === null) {\n      setChoiceOne(card);\n    } else {\n      setChoiceTwo(card);\n    }\n  };\n\n  // compare cards, useEffect fires everytime choiceTwo is updated\n  useEffect(() => {\n    if (choiceTwo && choiceOne.id != choiceTwo.id) {\n      // disables card while doing comparison\n      setDisabled(true);\n\n      // if match, change flag to matched\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return { ...card };\n            }\n          });\n        });\n      }\n      // delay the reset\n      setTimeout(() => resetTurn(), 1000);\n    }\n  }, [choiceTwo]);\n  console.log(cards);\n\n  // reset choices\n  const resetTurn = () => {\n    setChoiceTwo(null);\n    setChoiceOne(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n\n  };\n\n  // automatically start a new game\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  // reveal all cards or hide all cards\n  useEffect(() => {\n    if (toggle) {\n      setCards((prevCards) => {\n        return prevCards.map((card) => {\n          return { ...card, revealed: true };\n        });\n      });\n    } else {\n      setCards((prevCards) => {\n        return prevCards.map((card) => {\n          return { ...card, revealed: false };\n        });\n      });\n    }\n  }, [toggle]);\n\n\n  const handleToggle = () => {\n    setToggle(!toggle)\n    setChoiceTwo(null);\n    setChoiceOne(null);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <p>Turns: {turns}</p>\n      <button onClick={handleToggle}>Reveal/Hide</button>\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          // pass down a prop\n\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={\n              card === choiceOne ||\n              card === choiceTwo ||\n              card.matched ||\n              card.revealed\n            } // this card will be rendered as flipped if it is currently been selected\n            disabled={disabled}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}